--- firefox-.0.ebuild.orig	2023-11-25 14:37:54.969821108 +0100
+++ firefox-122.0.1.ebuild	2023-11-25 14:38:19.086486879 +0100
@@ -64,7 +64,8 @@ LICENSE="MPL-2.0 GPL-2 LGPL-2.1"
 IUSE="+clang cpu_flags_arm_neon dbus debug eme-free hardened hwaccel"
 IUSE+=" jack +jumbo-build libproxy lto openh264 pgo pulseaudio sndio selinux"
 IUSE+=" +system-av1 +system-harfbuzz +system-icu +system-jpeg +system-libevent +system-libvpx system-png system-python-libs +system-webp"
-IUSE+=" +telemetry valgrind wayland wifi +X"
+#IUSE+=" -telemetry wayland wifi +X"
+IUSE+=" -telemetry valgrind wayland wifi +X"
 
 # Firefox-only IUSE
 IUSE+=" geckodriver +gmp-autoupdate screencast"
@@ -93,6 +94,15 @@ BDEPEND="${PYTHON_DEPS}
 			)
 		)
 		(
+			sys-devel/clang:17
+			sys-devel/llvm:17
+			clang? (
+				sys-devel/lld:17
+				virtual/rust:0/llvm-17
+				pgo? ( =sys-libs/compiler-rt-sanitizers-17*[profile] )
+			)
+		)
+		(
 			sys-devel/clang:16
 			sys-devel/llvm:16
 			clang? (
@@ -101,15 +111,6 @@ BDEPEND="${PYTHON_DEPS}
 				pgo? ( =sys-libs/compiler-rt-sanitizers-16*[profile] )
 			)
 		)
-		(
-			sys-devel/clang:15
-			sys-devel/llvm:15
-			clang? (
-				sys-devel/lld:15
-				virtual/rust:0/llvm-15
-				pgo? ( =sys-libs/compiler-rt-sanitizers-15*[profile] )
-			)
-		)
 	)
 	app-alternatives/awk
 	app-arch/unzip
@@ -607,23 +608,23 @@ pkg_setup() {
 			ewarn "/dev/shm is not mounted -- expect build failures!"
 		fi
 
-		# Google API keys (see http://www.chromium.org/developers/how-tos/api-keys)
-		# Note: These are for Gentoo Linux use ONLY. For your own distribution, please
-		# get your own set of keys.
-		if [[ -z "${MOZ_API_KEY_GOOGLE+set}" ]] ; then
-			MOZ_API_KEY_GOOGLE="AIzaSyDEAOvatFogGaPi0eTgsV_ZlEzx0ObmepsMzfAc"
-		fi
-
-		if [[ -z "${MOZ_API_KEY_LOCATION+set}" ]] ; then
-			MOZ_API_KEY_LOCATION="AIzaSyB2h2OuRgGaPicUgy5N-5hsZqiPW6sH3n_rptiQ"
-		fi
-
-		# Mozilla API keys (see https://location.services.mozilla.com/api)
-		# Note: These are for Gentoo Linux use ONLY. For your own distribution, please
-		# get your own set of keys.
-		if [[ -z "${MOZ_API_KEY_MOZILLA+set}" ]] ; then
-			MOZ_API_KEY_MOZILLA="edb3d487-3a84-46m0ap1e3-9dfd-92b5efaaa005"
-		fi
+#		# Google API keys (see http://www.chromium.org/developers/how-tos/api-keys)
+#		# Note: These are for Gentoo Linux use ONLY. For your own distribution, please
+#		# get your own set of keys.
+#		if [[ -z "${MOZ_API_KEY_GOOGLE+set}" ]] ; then
+#			MOZ_API_KEY_GOOGLE="AIzaSyDEAOvatFogGaPi0eTgsV_ZlEzx0ObmepsMzfAc"
+#		fi
+#
+#		if [[ -z "${MOZ_API_KEY_LOCATION+set}" ]] ; then
+#			MOZ_API_KEY_LOCATION="AIzaSyB2h2OuRgGaPicUgy5N-5hsZqiPW6sH3n_rptiQ"
+#		fi
+#
+#		# Mozilla API keys (see https://location.services.mozilla.com/api)
+#		# Note: These are for Gentoo Linux use ONLY. For your own distribution, please
+#		# get your own set of keys.
+#		if [[ -z "${MOZ_API_KEY_MOZILLA+set}" ]] ; then
+#			MOZ_API_KEY_MOZILLA="edb3d487-3a84-46m0ap1e3-9dfd-92b5efaaa005"
+#		fi
 
 		# Ensure we use C locale when building, bug #746215
 		export LC_ALL=C
@@ -692,6 +693,8 @@ src_prepare() {
 		"${S}"/python/mozbuild/mozbuild/configure/check_debug_ranges.py \
 		|| die "sed failed to set toolchain prefix"
 
+	#Allow disabling ccache stats here otherwise you get this: https://bugzilla.mozilla.org/show_bug.cgi?id=1742849
+	#or similar, like: Failed to parse ccache stats output: 'Uncacheable/Compiler produced empty output' '6038'
 	sed -i \
 		-e 's/ccache_stats = None/return None/' \
 		"${S}"/python/mozbuild/mozbuild/controller/building.py \
@@ -725,10 +728,11 @@ src_prepare() {
 	BUILD_DIR="${WORKDIR}/${PN}_build"
 	mkdir -p "${BUILD_DIR}" || die
 
-	# Write API keys to disk
-	echo -n "${MOZ_API_KEY_GOOGLE//gGaPi/}" > "${S}"/api-google.key || die
-	echo -n "${MOZ_API_KEY_LOCATION//gGaPi/}" > "${S}"/api-location.key || die
-	echo -n "${MOZ_API_KEY_MOZILLA//m0ap1/}" > "${S}"/api-mozilla.key || die
+	## Write API keys to disk
+	#echo -n "${MOZ_API_KEY_GOOGLE//gGaPi/}" > "${S}"/api-google.key || die
+	#echo -n "${MOZ_API_KEY_LOCATION//gGaPi/}" > "${S}"/api-location.key || die
+	#echo -n "${MOZ_API_KEY_MOZILLA//m0ap1/}" > "${S}"/api-mozilla.key || die
+	rm -f "${S}"/api-google.key "${S}"/api-location.key "${S}"/api-mozilla.key
 
 	xdg_environment_reset
 }
@@ -813,6 +817,48 @@ src_configure() {
 		export MOZILLA_OFFICIAL=1
 	fi
 
+	#TODO: why did I do these before the other settings? wouldn't they potentially get overridden?!
+	#mozconfig_add_options_ac 'gotchas' \
+	#	--disable-more-deterministic
+	#^ because 84 failed tests(and Object's keys order is sorted!ie. it breaks the web): https://bugs.gentoo.org/717374 and https://bugzilla.mozilla.org/show_bug.cgi?id=1542951
+	#08 may 2021: www-client/firefox-88.0.1:  0:01.89 mozbuild.configure.options.InvalidOptionError: Unknown option: --disable-more-deterministic
+
+	mozconfig_add_options_ac 'just making sure' \
+		--disable-artifact-builds
+	# https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Build_Instructions/Artifact_builds
+
+
+		#--without-ccache \
+	mozconfig_add_options_ac 'with ccache' \
+		--with-ccache=/usr/bin/ccache
+
+
+	# 0:02.41 mozbuild.configure.options.InvalidOptionError: --enable-system-ffi is not available in this configuration
+		#--with-system-ffi \
+	# 0:02.39 mozbuild.configure.options.InvalidOptionError: --with-system-ffi is not available in this configuration
+
+	#mozconfig_add_options_ac 'probably needs to be enabled' \
+	#	--disable-ctypes
+	#XXX: ^ that --disable-ctypes will cause --enable-system-ffi to not be recognized as valid option!
+
+		#--enable-cpp-rtti \
+	mozconfig_add_options_ac 'must be enabled or else --enable-system-ffi to not be recognized as valid option, at least!' \
+		--enable-ctypes
+	#js-ctypes allows application and extension code to call back and forth to native code written in C. C++ support is possible through vtable pointers see Using COM from js-ctypes.
+#src: https://developer.mozilla.org/en-US/docs/Mozilla/js-ctypes
+#XXX: if you disable this, you'll get the following(maybe also the core dump because of it): firefox-hg $ ./mach run
+# 0:00.89 /tmp/obj-x86_64-pc-linux-gnu/dist/bin/firefox -no-remote -profile /tmp/obj-x86_64-pc-linux-gnu/tmp/scratch_user
+#JavaScript error: resource://gre/modules/osfile/osfile_shared_allthreads.jsm, line 92: NS_ERROR_FILE_NOT_FOUND: Component returned failure code: 0x80520012 (NS_ERROR_FILE_NOT_FOUND) [nsIXPCComponents_Utils.import]
+#[27108] WARNING: Cannot create startup observer : service,@mozilla.org/weave/service;1: file /home/z/build/1packages/firefox-hg/makepkg_pacman/firefox-hg/src/firefox-hg/embedding/components/appstartup/nsAppStartupNotifier.cpp, line 81
+
+	#removed from 'Gentoo default':
+		#--allow-addon-sideload \
+		#^  if update channel is esr then this is true! so careful!
+		#--without-ccache \
+
+		#--allow-addon-sideload \
+		#--without-ccache \
+
 	mozconfig_add_options_ac 'Gentoo default' \
 		--allow-addon-sideload \
 		--disable-cargo-incremental \
@@ -852,13 +898,74 @@ src_configure() {
 		--x-libraries="${ESYSROOT}/usr/$(get_libdir)"
 
 	# Set update channel
-	local update_channel=release
-	[[ -n ${MOZ_ESR} ]] && update_channel=esr
-	mozconfig_add_options_ac '' --update-channel=${update_channel}
+	#local update_channel=release
+	#[[ -n ${MOZ_ESR} ]] && update_channel=esr
+	#mozconfig_add_options_ac '' --update-channel=${update_channel}
+	mozconfig_add_options_ac 'from old mozconfig' --disable-update-channel
+
+		#on 97.0.2, 08march2022 the following options don't exist anymore:
+		#'--enable-extensions=default,-skipgnomevfs,-skipgio' \ # 0:01.62 mozbuild.configure.options.InvalidOptionError: Unknown option: --enable-extensions
+		#--disable-tasktracer \
+		#--enable-xul \
+		#on 103.0 28 july 2022, doesn't exist:
+		#--disable-verify-mar \
+
+	# spacer
+
+	mozconfig_add_options_ac 'from old mozconfig' \
+		--disable-valgrind \
+		--disable-jprof \
+		--disable-instruments \
+		--disable-callgrind \
+		--disable-dtrace \
+		--disable-libproxy \
+		--disable-accessibility \
+		--disable-webrtc \
+		--disable-raw \
+		--disable-wmf \
+		--enable-ffmpeg \
+		--disable-system-extension-dirs \
+		--disable-parental-controls \
+		--enable-sandbox \
+		--disable-logrefcnt \
+		--disable-dump-painting \
+		--disable-stdcxx-compat \
+		--disable-startupcache \
+		--disable-webspeech \
+		--disable-synth-speechd \
+		--disable-webspeechtestbackend \
+		--disable-tests \
+		--disable-vtune
 
-	if ! use x86 && [[ ${CHOST} != armv*h* ]] ; then
-		mozconfig_add_options_ac '' --enable-rust-simd
-	fi
+	# in firefox 118.0.1
+	# 0:00.81 mozbuild.configure.options.InvalidOptionError: Unknown option: --enable-fmp4
+		#--enable-fmp4 \
+
+
+	#see more flags in ${WORKDIR}/firefox-83.0/toolkit/moz.configure
+
+	#FIXME: can't disable printing due to errors because it's not guarded, ie. firefox devs don't expect it to ever be disabled so they don't compile against it.
+		#--disable-printing \
+		#16:19.17 /var/tmp/portage/www-client/firefox-83.0/work/firefox-83.0/widget/nsPrintSettingsImpl.cpp:821:24: error: use of undeclared identifier 'PR_GetEnv'
+	mozconfig_add_options_ac 'possible source of issues unless toggled' \
+		--disable-profiling \
+		--disable-dmd \
+		--disable-cpp-rtti
+			# #DMD (short for "dark matter detector") is a heap profiler within Firefox. https://developer.mozilla.org/en-US/docs/Mozilla/Performance/DMD
+
+
+	#--disable-system-pixman #used to be disabled on archlinux because:  ^ can't find pixman.h !
+	# already handled when using USE=clang :: --disable-elf-hack
+	# --------------
+#	if ! use x86 && [[ ${CHOST} != armv*h* ]] ; then
+#		mozconfig_add_options_ac '' --enable-rust-simd
+#		#well this gives me errors like this:
+## 4:01.36 error: unrecognized platform-specific intrinsic function: `simd_shuffle2`
+## 4:01.36   --> /var/tmp/portage/www-client/firefox-118.0.1/work/firefox-118.0.1/third_party/rust/packed_simd_2/src/codegen/llvm.rs:10:5
+## 4:01.36    |
+## 4:01.36 10 |     pub fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;
+## 4:01.36    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+#	fi
 
 	# For future keywording: This is currently (97.0) only supported on:
 	# amd64, arm, arm64 & x86.
@@ -1008,10 +1115,15 @@ src_configure() {
 
 	mozconfig_use_enable debug
 	if use debug ; then
-		mozconfig_add_options_ac '+debug' --disable-optimize
+		#mozconfig_add_options_ac '+debug' --disable-optimize
+		mozconfig_add_options_ac '+debug but do we want it for JS too? say yes for now' --enable-debug-js-modules
 		mozconfig_add_options_ac '+debug' --enable-real-time-tracing
+		#^ i haven't checked this to see if i need it or i don't!
 	else
-		mozconfig_add_options_ac 'Gentoo defaults' --disable-real-time-tracing
+		mozconfig_add_options_ac 'normal non-debug build' --disable-debug-js-modules
+	fi
+	mozconfig_add_options_ac 'Gentoo defaults' --disable-real-time-tracing
+	#the -ggdb thing isn't dependent on USE=debug from now on:
 
 		if is-flag '-g*' ; then
 			if use clang ; then
@@ -1036,7 +1148,7 @@ src_configure() {
 		else
 			mozconfig_add_options_ac "Gentoo default" --enable-optimize=-O2
 		fi
-	fi
+	#fi
 
 	# Debug flag was handled via configure
 	filter-flags '-g*'
@@ -1137,6 +1249,25 @@ src_configure() {
 
 	# Disable notification when build system has finished
 	export MOZ_NOSPAM=1
+	#me
+	export -n MOZ_TELEMETRY_REPORTING
+	unset MOZ_TELEMETRY_REPORTING
+
+	#unsure if any effect: (but a patch is already rendering the use of this moot)
+	export -n MOZ_TELEMETRY_ON_BY_DEFAULT
+	unset MOZ_TELEMETRY_ON_BY_DEFAULT
+
+	#actually forget this, I'm patching it to FALSE in sources! 08 March 2022
+	##export MOZ_ADDON_SIGNING=1 #yup this was 1 even tho MOZ_REQUIRE_SIGNING=0
+	#export MOZ_ADDON_SIGNING=0 #this setting may not be used at all currently on 97.0.2 but just setting it to 0 anyway
+	##export MOZ_REQUIRE_SIGNING=0 # 0:01.63 mozbuild.configure.options.InvalidOptionError: MOZ_REQUIRE_SIGNING takes 0 values
+	#export -n MOZ_REQUIRE_SIGNING
+	#unset MOZ_REQUIRE_SIGNING
+	#MOZ_REQUIRE_SIGNING=
+	##^yup, it should be empty and work as if it's set to disabled!
+	#export MOZ_REQUIRE_SIGNING
+	#end of me
+
 
 	# Portage sets XARGS environment variable to "xargs -r" by default which
 	# breaks build system's check_prog() function which doesn't support arguments
